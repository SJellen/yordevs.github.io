{"version":3,"sources":["webpack://yordevs-site/./src/components/Button.js","webpack://yordevs-site/./src/templates/project.js"],"names":["color","config","font","transition","breakpoint","StyledButton","styled","Link","weight","semibold","primary","accent","background","md","standard","to","children","className","test","as","href","target","rel","Title","Client","Lead","Developers","data","markdownRemark","frontmatter","title","client","lead","developers","link","html","join","dangerouslySetInnerHTML","__html"],"mappings":"0JAQQA,EAAwCC,UAAjCC,EAAiCD,SAA3BE,EAA2BF,eAAfG,EAAeH,eAE1CI,GAAeC,QAAOC,QAAV,uEAAGD,CAAH,mWAKDJ,EAAKM,OAAOC,UAEP,qBAAGC,QAAyBV,EAAMW,OAASX,EAAMY,cAC5D,qBAAGF,QAAyBV,EAAMY,WAAaZ,EAAMW,SAG1CX,EAAMW,OAQhBP,EAAWS,GAIHV,EAAWW,UAKP,qBAAGJ,QAAyBV,EAAMY,WAAaZ,EAAMW,UAChE,qBAAGD,QAAyBV,EAAMW,OAASX,EAAMY,aAGlDR,EAAWS,IA6BvB,IAxBe,SAAC,GAAkD,IAAhDE,EAA+C,EAA/CA,GAAIC,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,UAAiC,IAAtBP,eAAsB,SAG/D,MAFmB,YAAYQ,KAAKH,GAIhC,gBAACV,EAAD,CAAcU,GAAIA,EAAIE,UAAWA,EAAWP,QAASA,GAClDM,GAML,gBAACX,EAAD,CACEc,GAAG,IACHC,KAAML,EACNM,OAAO,SACPC,IAAI,sBACJL,UAAWA,EACXP,QAASA,GACRM,K,iFC1DDO,EAAQjB,mBAAH,sDAAGA,CAAH,MAELkB,EAASlB,mBAAH,uDAAGA,CAAH,MAENmB,EAAOnB,mBAAH,qDAAGA,CAAH,MAEJoB,EAAapB,mBAAH,2DAAGA,CAAH,yBA+BhB,UA3BwB,SAAC,GAOlB,IAAD,IANJqB,KACEC,eAKE,IAJAC,YAAeC,EAIf,EAJeA,MAAOC,EAItB,EAJsBA,OAAQC,EAI9B,EAJ8BA,KAAMC,EAIpC,EAJoCA,WAAYC,EAIhD,EAJgDA,KAChDC,EAGA,EAHAA,KAIJ,OACE,gBAAC,IAAD,CAAQL,MAAOA,GACb,2BACE,2BACE,gBAACP,EAAD,iBAAiBO,GACjB,gBAACN,EAAD,gBAAiBO,GACjB,gBAACN,EAAD,sBAAqBO,GACrB,gBAACN,EAAD,oBACc,yBAAIO,EAAWG,KAAK,QAElC,gBAAC,IAAD,CAAQrB,GAAImB,GAAZ,iBACA,2BACA,uBAAKG,wBAAyB,CAAEC,OAAQH","file":"component---src-templates-project-js-ff33e66d64445ff9eda1.js","sourcesContent":["/* eslint-disable indent */\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"gatsby\";\nimport PropTypes from \"prop-types\";\n\nimport config from \"../theme/config\";\n\nconst { color, font, transition, breakpoint } = config;\n\nconst StyledButton = styled(Link)`\n  display: inline-block;\n\n  text-decoration: none;\n  text-align: center;\n  font-weight: ${font.weight.semibold};\n\n  background-color: ${({ primary }) => (primary ? color.accent : color.background)};\n  color: ${({ primary }) => (primary ? color.background : color.accent)};\n  text-align: center;\n\n  border: 2px solid ${color.accent};\n  border-radius: 25rem;\n\n  padding: 0.3em 2em;\n  margin: 0.5em 0;\n\n  width: 100%;\n\n  @media (${breakpoint.md}) {\n    width: fit-content;\n  }\n\n  transition: all ${transition.standard};\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: ${({ primary }) => (primary ? color.background : color.accent)};\n    color: ${({ primary }) => (primary ? color.accent : color.background)};\n  }\n\n  @media (${breakpoint.md}) {\n    width: fit-content;\n  }\n`;\n\nconst Button = ({ to, children, className, primary = false }) => {\n  const isInternal = /^\\/(?!\\/)/.test(to);\n\n  if (isInternal) {\n    return (\n      <StyledButton to={to} className={className} primary={primary}>\n        {children}\n      </StyledButton>\n    );\n  }\n\n  return (\n    <StyledButton\n      as=\"a\"\n      href={to}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className={className}\n      primary={primary}>\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n\nButton.propTypes = {\n  to: PropTypes.string,\n  children: PropTypes.node,\n  primary: PropTypes.bool,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\n\nimport styled from \"styled-components\";\nimport Layout from \"../components/Layout\";\nimport Button from \"../components/Button\";\n\nconst Title = styled.h1``;\n\nconst Client = styled.h2``;\n\nconst Lead = styled.h3``;\n\nconst Developers = styled.h3`\n  font-weight: normal;\n`;\n\nconst ProjectTemplate = ({\n  data: {\n    markdownRemark: {\n      frontmatter: { title, client, lead, developers, link },\n      html,\n    },\n  },\n}) => {\n  return (\n    <Layout title={title}>\n      <div>\n        <div>\n          <Title>Project: {title}</Title>\n          <Client>Client: {client}</Client>\n          <Lead>Project Lead: {lead}</Lead>\n          <Developers>\n            Developers: <i>{developers.join(\", \")}</i>\n          </Developers>\n          <Button to={link}>Visit Project</Button>\n          <br></br>\n          <div dangerouslySetInnerHTML={{ __html: html }} />\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default ProjectTemplate;\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n        client\n        description\n        lead\n        developers\n        link\n      }\n    }\n  }\n`;\n\nProjectTemplate.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n"],"sourceRoot":""}